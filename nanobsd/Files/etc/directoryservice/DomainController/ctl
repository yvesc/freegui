#!/bin/sh

. /etc/rc.freenas

cifs_file="/tmp/.cifs_DC"
service=/usr/sbin/service
python=/usr/local/bin/python
notifier=/usr/local/www/freenasUI/middleware/notifier.py

dcctl_cmd()
{
	local args="$*"

	if [ -n "${args}" ]
	then
		logger -t DomainController "${args}"
		${args}
		return $?
	fi

	return 0
}

cifs_enabled()
{
	srv_enabled cifs && return 0
	return 1
}

dc_enabled()
{
	dirsrv_enabled domaincontroller && return 0
	return 1
}

cifs_start()
{
	dcctl_cmd ${python} ${notifier} start cifs
	return $?
}

cifs_stop()
{
	dcctl_cmd ${python} ${notifier} stop cifs
	return $?
}

cifs_restart()
{
	dcctl_cmd ${python} ${notifier} stop cifs
	dcctl_cmd ${python} ${notifier} start cifs
	return $?
}

resolvconf_start()
{
	if [ ! -f /etc/resolv.conf.dc ]
	then
		echo 'nameserver 127.0.0.1' > /etc/resolv.conf.dc
		chmod 644 /etc/resolv.conf.dc
	fi

	cp /etc/resolv.conf /etc/resolv.conf.bak
	cp /etc/resolv.conf.dc /etc/resolv.conf
}

resolvconf_stop()
{
	if [ -f /etc/resolv.conf.bak ]
	then
		cp /etc/resolv.conf.bak /etc/resolv.conf
		chmod 644 /etc/resolv.conf
	fi
}

dcctl_start()
{
	local cifs_started=0	
	local dc_started=0

	if cifs_enabled
	then
		cifs_started=1
		cifs_stop
	else
		srv_set cifs 1
	fi

	if dc_enabled
	then
		dc_started=1
	else		
		srv_set directoryservice 1
	fi

	echo ${cifs_started} > "${cifs_file}"

	dcctl_cmd ${service} ix-kerberos quietstart

	resolvconf_start

	dcctl_cmd ${service} ix-nsswitch quietstart
	dcctl_cmd ${service} ix-pam quietstart

	cifs_start

	dcctl_cmd "${service} ix-cache quietstart &"

	return 0
}

dcctl_stop()
{
	local cifs_started=1
	local prev_cifs_started=0
	if [ -s "${cifs_file}" ]
	then
		prev_cifs_started="$(cat "${cifs_file}")"
	fi

	if ! dc_enabled
	then
		srv_set directoryservice 1
	fi

	if cifs_enabled
	then
		cifs_started=1
		cifs_stop
	fi

	dcctl_cmd ${service} ix-kerberos quietstop
	dcctl_cmd ${service} ix-nsswitch quietstop
	dcctl_cmd ${service} ix-pam quietstop
	dcctl_cmd "${service} ix-cache quietstop &"

	if [ "${prev_cifs_started}" = "0" -a "${cifs_started}" = "0" ]
	then
		dcctl_cmd ${service} samba_server forcestop
		srv_set cifs 0
		srv_set directoryservice 0
		dcctl_cmd ${service} ix-samba start

	elif [ "${prev_cifs_started}" = "0" -a "${cifs_started}" = "1" ]
	then
		dcctl_cmd ${service} samba_server forcestop
		srv_set cifs 0
		srv_set directoryservice 0
		dcctl_cmd ${service} ix-samba start

	elif [ "${prev_cifs_started}" = "1" -a "${cifs_started}" = "0" ]
	then
		dcctl_cmd ${service} samba_server forcestop
		srv_set directoryservice 0
		srv_set cifs 1
		dcctl_cmd ${service} ix-samba start
		cifs_start

	elif [ "${prev_cifs_started}" = "1" -a "${cifs_started}" = "1" ]		
	then
		dcctl_cmd ${service} samba_server forcestop
		srv_set directoryservice 0
		srv_set cifs 1
		dcctl_cmd ${service} ix-samba start
		cifs_start
	fi

	srv_set directoryservice 0
	resolvconf_stop

	return 0
}

dcctl_status()
{
	local pidfile="/var/run/samba4/samba.pid"
	if [ -s "${pidfile}" ]
	then
		pgrep -qF "${pidfile}"
		return $?
	fi

	return 1
}

name="dcctl"
start_cmd='dcctl_start'
status_cmd='dcctl_status'
stop_cmd='dcctl_stop'
extra_commands='status'

load_rc_config $name
run_rc_command "$1"
