#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-fstab
# REQUIRE: earlykld
# BEFORE: fsck

. /etc/rc.subr

#
# Generate fstab right before mountlate.
#
generate_fstab_real()
{
	local IFS="|"
	local fstype volumename newmp mountpoint mpoptions device fs

	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "
		SELECT
			v.vol_fstype,
			v.vol_name,
			mp.mp_path,
			mp.mp_options

		FROM
			storage_volume as v

		LEFT OUTER JOIN
			storage_mountpoint as mp
		ON
			v.id = mp.mp_volume_id

		WHERE
			v.vol_fstype in ('UFS', 'NTFS', 'MSDOSFS', 'EXT2FS')
	" | \
	while read fstype volumename newmp mpoptions; do
		passno=2
		case "${fstype}" in
			UFS) device="/dev/ufs/${volumename}"; fs="ufs"; ;;
			NTFS) device="/dev/ntfs/${volumename}"; fs="ntfs"; passno=0 ;;
			EXT2FS) device="/dev/ext2fs/${volumename}"; fs="ext2fs"; passno=0 ;;
			MSDOSFS) vname=$(echo ${volumename}|tr '[:lower:]' '[:upper:]')
				device="/dev/msdosfs/${vname}"; fs="msdosfs" ;;
		esac

		if [ -c "${device}" ]; then
			if [ -z "${newmp}" ]; then
				mountpoint=/mnt/${volumename}
			else
				mountpoint=${newmp}
			fi

			mkdir -p ${mountpoint}

			if [ "${mountpoint#/mnt}" = "${mountpoint}" ]; then
				echo "${device}	${mountpoint}	${fs}	${mpoptions}	2	${passno}"
			else
				if [ "${mpoptions%%late*}" = "${mpoptions}" ]; then
					echo "${device}	${mountpoint}	${fs}	${mpoptions},late	2	${passno}"
				else
					echo "${device}	${mountpoint}	${fs}	${mpoptions%%,late*}${mpoptions##*,late},late	2	${passno}"
				fi
			fi
		fi
	done
}

generate_fstab_swap()
{
	local IFS=\|
	local encrypted_swap swap_suffix
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT id FROM storage_disk WHERE disk_enabled = 1" | \
	while read diskid; do
        devname=$(/usr/local/bin/python /usr/local/www/freenasUI/middleware/notifier.py swap_from_diskid "${diskid}")
        if [ -c "/dev/${devname}" ]; then
       	    echo "/dev/${devname}.eli	none			swap		sw		0	0"
	    if [ ! -L /dev/dumpdev ]; then
		/sbin/dumpon /dev/${devname} && ln -sf /dev/${devname} /dev/dumpdev
	    fi
        fi 
	done
}

generate_fstab()
{
	local _doumount=0

	# Running early: check and mount /data, then try to get a crashdump
	if [ ! -f ${FREENAS_CONFIG} ]; then
		fsck -y /data
		mount /data
		_doumount=1
	fi
	cp /conf/base/etc/fstab /etc/fstab
	generate_fstab_real >> /etc/fstab
	generate_fstab_swap >> /etc/fstab
	if [ "${_doumount}" -eq 1 ]; then
		if savecore -C /dev/dumpdev > /dev/null; then
			savecore ${savecore_flags} ${dumpdir} /dev/dumpdev
			/usr/sbin/crashinfo -d ${dumpdir}
		fi
		umount /data
	fi
}

name="ix-fstab"
start_cmd='generate_fstab'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
