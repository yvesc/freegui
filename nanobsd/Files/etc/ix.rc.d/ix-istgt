#!/bin/sh
#

# PROVIDE: ix-istgt
# REQUIRE: NETWORKING mountlate
# BEFORE: istgt
# KEYWORD: nojail

. /etc/rc.subr

ISTGT_CONFPATH="/usr/local/etc/istgt"
ISTGT_CONFIG="${ISTGT_CONFPATH}/istgt.conf"
ISTGT_AUTHFILE="${ISTGT_CONFPATH}/auth.conf"
ISTGT_CTLFILE="${ISTGT_CONFPATH}/istgtcontrol.conf"
ALERT_PORTAL_IP="/var/tmp/iscsi_portal_ip"

pidfile=/var/run/istgt.pid
command="/usr/local/bin/istgt"
command_args="-c ${ISTGT_CONFIG}"
flag=""

generate_istgt_config()
{
	local IFS="|"

	# Generate [Global] section
        local iscsi_mediadirectory="/mnt"
	local f="iscsi_basename iscsi_discoveryauthmethod iscsi_discoveryauthgroup iscsi_iotimeout iscsi_nopinint iscsi_maxsesh iscsi_maxconnect iscsi_r2t iscsi_maxoutstandingr2t iscsi_firstburst iscsi_maxburst iscsi_maxrecdata iscsi_defaultt2w iscsi_defaultt2r iscsi_toggleluc iscsi_lucip iscsi_lucport iscsi_luc_authnetwork iscsi_luc_authmethod iscsi_luc_authgroup"
	eval local ${f}
	local sf=$(var_to_sf $f)
        ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT ${sf} FROM services_iscsitargetglobalconfiguration ORDER BY -id LIMIT 1" | \
        while eval read ${f}; do
		echo "# Global section"
		echo "[Global]"
		echo "  NodeBase \"${iscsi_basename}\""
		echo "  PidFile \"${pidfile}\""
		echo "  AuthFile \"${ISTGT_AUTHFILE}\""
		echo "  MediaDirectory /mnt"
		echo "  Timeout ${iscsi_iotimeout}"
		echo "  NopInInterval ${iscsi_nopinint}"
		echo "  MaxR2T ${iscsi_r2t}"
		echo "  DiscoveryAuthMethod ${iscsi_discoveryauthmethod}"
		if [ -n "${iscsi_discoveryauthgroup}" -a "${iscsi_discoveryauthmethod}" != "None" ]; then
			echo "  DiscoveryAuthGroup AuthGroup${iscsi_discoveryauthgroup}"
		fi
		echo "  MaxSessions ${iscsi_maxsesh}"
		echo "  MaxConnections ${iscsi_maxconnect}"
		echo "  FirstBurstLength ${iscsi_firstburst}"
		echo "  MaxBurstLength ${iscsi_maxburst}"
		echo "  MaxRecvDataSegmentLength ${iscsi_maxrecdata}"
		echo "  MaxOutstandingR2T ${iscsi_maxoutstandingr2t}"
		echo "  DefaultTime2Wait ${iscsi_defaultt2w}"
		echo "  DefaultTime2Retain ${iscsi_defaultt2r}"
		echo
		# Generate [UnitControl] section, if we are asked for
		echo "[UnitControl]"
                if [ ${iscsi_toggleluc} = "1" ]; then
			echo "  AuthMethod ${iscsi_luc_authmethod}"
			if [ -n "${iscsi_luc_authgroup}" -a "${iscsi_luc_authmethod}" != "None" ]; then
				echo "  AuthGroup AuthGroup${iscsi_luc_authgroup}"
			fi
			echo "  Portal UC1 ${iscsi_lucip}:${iscsi_lucport}"
			echo "  Netmask ${iscsi_luc_authnetwork}"
		fi
		echo
        done

	# Generate [PortalGroupNN] sections
	rm -f "${ALERT_PORTAL_IP}" || true
	echo "# PortalGroup section"
	local f="id iscsi_target_portal_tag"
	eval local ${f}
	local sf=$(var_to_sf $f)
	local f2="iscsi_target_portalip_ip iscsi_target_portalip_port"
	eval local ${sf2}
	local sf2=$(var_to_sf $f2)
        ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT ${sf} FROM services_iscsitargetportal ORDER BY id" | \
        while eval read -r ${f}; do
		echo "[PortalGroup${iscsi_target_portal_tag}]"
		${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT $sf2 FROM services_iscsitargetportalip WHERE iscsi_target_portalip_portal_id=${id}" | \
		while eval read -r $f2; do
			if [ -z $(/sbin/ifconfig -a|grep "${iscsi_target_portalip_ip}") ] && [ "${iscsi_target_portalip_ip}" != "0.0.0.0" ]; then
				echo "${iscsi_target_portalip_ip}" >> ${ALERT_PORTAL_IP}
				iscsi_target_portalip_ip="0.0.0.0"
			fi
			# IPv6 or not
			if [ ! -z "$(echo ${iscsi_target_portalip_ip}|grep ':')" ]; then
				echo "  Portal DA1 [${iscsi_target_portalip_ip}]:${iscsi_target_portalip_port}"
			else
				echo "  Portal DA1 ${iscsi_target_portalip_ip}:${iscsi_target_portalip_port}"
			fi
		done
	done
	echo

	# Generate [InitiatorGroupNN] sections
	echo "# InitiatorGroup section"
	local f="id iscsi_target_initiator_tag"
	eval local ${f}
	local sf=$(var_to_sf $f)
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT ${sf} FROM services_iscsitargetauthorizedinitiator ORDER BY id" | \
	while eval read -r ${f}; do
		echo "[InitiatorGroup${iscsi_target_initiator_tag}]"
		${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT iscsi_target_initiator_initiators FROM services_iscsitargetauthorizedinitiator WHERE id = ${id}" | tr " ," "\n"| tr -s "\n" | \
		while read -r initiator; do
			if [ -n "${initiator}" ]; then
				echo "  InitiatorName \"${initiator}\""
			fi
		done
		# tr pipe for backward compatibiity
		${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT iscsi_target_initiator_auth_network FROM services_iscsitargetauthorizedinitiator WHERE id = ${id}" | tr " ," "\n"| tr -s "\n" | \
		while read -r network; do
			if [ -n "${network}" ]; then
				echo "  Netmask ${network}"
			fi
		done
		echo
	done

	# Generate [LogicalUnitNN] sections
	echo "# LogicalUnit section"
	local f="iscsi_target_logical_blocksize iscsi_target_portalgroup_id iscsi_target_queue_depth iscsi_target_name iscsi_target_initiatorgroup_id iscsi_target_alias iscsi_target_type iscsi_target_authgroup iscsi_target_authtype iscsi_target_initialdigest iscsi_target_flags iscsi_target_serial iscsi_target_initiator_tag iscsi_target_portal_tag"
	eval local ${f}
	local sf=$(var_to_sf $f)
	iscsi_target_lun=0
        ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT t.id AS id, ${sf} FROM services_iscsitarget t LEFT JOIN services_iscsitargetportal p ON p.id=iscsi_target_portalgroup_id LEFT JOIN services_iscsitargetauthorizedinitiator a ON a.id=iscsi_target_initiatorgroup_id ORDER BY id" | \
        while eval read id ${f}; do
		extent_count=`${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT COUNT(*) FROM services_iscsitargettoextent AS t WHERE t.iscsi_target_id = ${id}"`
		if [ "${extent_count}" = "0" ]; then
			continue
		fi
		echo "[LogicalUnit${id}]"
		echo "  TargetName \"${iscsi_target_name}\""
		if [ -n "${iscsi_target_alias}" ]; then
			echo "  TargetAlias \"${iscsi_target_alias}\""
		fi
		echo "  Mapping PortalGroup${iscsi_target_portal_tag} InitiatorGroup${iscsi_target_initiator_tag}"
		echo "  AuthMethod ${iscsi_target_authtype}"
		if [ -n "${iscsi_target_authgroup}" -a "${iscsi_target_authtype}" != "None" ]; then
			echo "  AuthGroup AuthGroup${iscsi_target_authgroup}"
		fi
		echo "  UseDigest Auto"
		if [ "${iscsi_target_flags}" = "rw" ]; then
			echo "  ReadOnly No"
		else
			echo "  ReadOnly Yes"
		fi
		echo "  UnitType ${iscsi_target_type}"
		echo "  UnitInquiry \"FreeBSD\" \"iSCSI Disk\" \"0123\" \"${iscsi_target_serial}\""
		echo "  UnitOnline yes"
		echo "  BlockLength ${iscsi_target_logical_blocksize}"
		echo "  QueueDepth ${iscsi_target_queue_depth}"
		local iscsi_target_extent_path iscsi_target_extent_filesize iscsi_target_lun iscsi_target_extent_type
		iscsi_target_lun=0
		${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
		    "SELECT
			e.iscsi_target_extent_path,
			e.iscsi_target_extent_filesize,
			iscsi_target_extent_type
		    FROM
			services_iscsitargetextent
			    AS e LEFT OUTER JOIN services_iscsitargettoextent
			    AS t ON e.id = t.iscsi_extent_id
		    WHERE t.iscsi_target_id = ${id}" | \
		while read iscsi_target_extent_path iscsi_target_extent_filesize iscsi_target_extent_type; do
			if [ "${iscsi_target_extent_type}" = "Disk" ]; then
				mpname=$(${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT disk_multipath_name FROM storage_disk WHERE id = ${iscsi_target_extent_path}")
				ident=$(${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT disk_identifier FROM storage_disk WHERE id = ${iscsi_target_extent_path}"|sed 's/{label}/{devicename}/')
				diskname=$(/usr/local/bin/python /usr/local/www/freenasUI/middleware/notifier.py identifier_to_device "${ident}")
				if [ -n "${mpname}" ]; then
					echo -n "  LUN${iscsi_target_lun} Storage /dev/multipath/${mpname}"
				else
					echo -n "  LUN${iscsi_target_lun} Storage /dev/${diskname}"
				fi
			elif [ "${iscsi_target_extent_type}" = "ZVOL" ]; then
				echo -n "  LUN${iscsi_target_lun} Storage /dev/${iscsi_target_extent_path}"
			else
				echo -n "  LUN${iscsi_target_lun} Storage ${iscsi_target_extent_path}"
			fi
			if [ -c "${iscsi_target_extent_path}" ]; then
				echo " auto"
			elif [ "${iscsi_target_extent_filesize}" = "0" ]; then
				echo " auto"
			else
				echo " ${iscsi_target_extent_filesize}"
			fi
			echo "  LUN${iscsi_target_lun} Option Serial ${iscsi_target_serial}${iscsi_target_lun}"
			iscsi_target_lun=$((${iscsi_target_lun}+1))
		done
	done
}

generate_istgt_auth()
{
	local IFS="|"
	local f="iscsi_target_auth_tag"
	local sf=$(var_to_sf $f)
	local f2="iscsi_target_auth_user iscsi_target_auth_secret iscsi_target_auth_peeruser iscsi_target_auth_peersecret"
	local sf2=$(var_to_sf $f2)
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT DISTINCT $sf FROM services_iscsitargetauthcredential ORDER BY iscsi_target_auth_tag" | \
	while eval read -r $f; do
		echo "[AuthGroup${iscsi_target_auth_tag}]"
		${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
		     "SELECT $sf2
		      FROM services_iscsitargetauthcredential
		      WHERE iscsi_target_auth_tag=${iscsi_target_auth_tag}
		      ORDER BY id" | \
		while eval read -r $f2; do
			echo "  Auth \"${iscsi_target_auth_user}\" \"${iscsi_target_auth_secret}\" \"${iscsi_target_auth_peeruser}\" \"${iscsi_target_auth_peersecret}\""
		done
		echo
	done
}

generate_istgt_ctlfile()
{
	local IFS="|"
        local f="iscsi_basename iscsi_iotimeout iscsi_lucip iscsi_lucport iscsi_luc_authnetwork iscsi_luc_authmethod iscsi_luc_authgroup iscsi_toggleluc"
	local sf=$(var_to_sf $f)

	local f2="iscsi_target_auth_user iscsi_target_auth_secret iscsi_target_auth_peeruser iscsi_target_auth_peersecret"
	local sf2=$(var_to_sf $f2)

	# Generate [Global] section
        ${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT $sf FROM services_iscsitargetglobalconfiguration ORDER BY -id LIMIT 1" | \
        while eval read ${f}; do
		if [ "${iscsi_toggleluc}" = "1" ]; then
			echo "# Global section"
			echo "[Global]"
			echo "  Timeout ${iscsi_iotimeout}"
			echo "  AuthMethod ${iscsi_luc_authmethod}"
			echo "  Host ${iscsi_lucip}"
			echo "  Port ${iscsi_lucport}"
			echo "  Lun 0"
			echo "  Flags ro"
			echo "  Size auto"
			if [ -n "${iscsi_luc_authgroup}" -a "${iscsi_luc_authmethod}" != "None" ]; then
				${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} \
				    "SELECT $sf2
				     FROM services_iscsitargetauthcredential
				     WHERE iscsi_target_auth_tag=${iscsi_luc_authgroup}
				     ORDER BY id" | \
				while eval read -r $f2; do
					echo "  Auth \"${iscsi_target_auth_user}\" \"${iscsi_target_auth_secret}\" \"${iscsi_target_auth_peeruser}\" \"${iscsi_target_auth_peersecret}\""
				done
			fi
		fi
		echo
	done
}

generate_istgt_conf()
{
	# TODO: Use mtree instead?
	mkdir -p ${ISTGT_CONFPATH}
	umask 137
	generate_istgt_auth > ${ISTGT_AUTHFILE}
	generate_istgt_config > ${ISTGT_CONFIG}
	generate_istgt_ctlfile > ${ISTGT_CTLFILE}
	chmod 640 ${ISTGT_AUTHFILE} ${ISTGT_CONFIG} ${ISTGT_CTLFILE}
}

name="ix-istgt"
start_cmd='generate_istgt_conf'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"

