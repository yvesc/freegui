#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-zfs
# REQUIRE: hostid mountcritlocal
# BEFORE: zfs

. /etc/rc.subr

#
# Generate fstab right before mountlate.
#
import_zpools()
{
	local IFS="|"
	local f="vol_name vol_guid"
	local sf=$(var_to_sf $f)
	local rc=1
	if [ ! -d "/data/zfs" ]; then
		mkdir /data/zfs || true
	else
		if [ -e /data/zfs/killcache ]; then
			rm -f /data/zfs/zpool.cache /data/zfs/zpool.cache.saved
		else
			touch /data/zfs/killcache
			fsync /data/zfs/killcache
		fi
		if [ -s /data/zfs/zpool.cache ]; then
			if ([ ! -e /data/zfs/zpool.cache.saved ] || [ /data/zfs/zpool.cache -nt /data/zfs/zpool.cache.saved ]); then
				cp /data/zfs/zpool.cache /data/zfs/zpool.cache.saved
			fi
		fi
	fi
	${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "SELECT $sf FROM storage_volume WHERE vol_fstype = 'ZFS' AND vol_encrypt < 2" | \
	while eval read -r $f; do
		if [ -n "${vol_guid}" ]; then
			[ -e /data/zfs/zpool.cache.saved ] && /sbin/zpool import -c /data/zfs/zpool.cache.saved -o cachefile=none -R /mnt -f ${vol_guid} || /sbin/zpool import -o cachefile=none -R /mnt -f ${vol_guid}
			rc=$?
		fi
		if [ ${rc} -ne 0 ]; then
			/sbin/zpool import -o cachefile=none -R /mnt -f ${vol_name}
		fi
		/sbin/zpool set cachefile=/data/zfs/zpool.cache ${vol_name}
		# Fixup mountpoints
		[ -d /mnt/mnt ] && /sbin/zfs inherit -r mountpoint ${vol_name}
	done
	rm -f /data/zfs/killcache
	cp /data/zfs/zpool.cache /data/zfs/zpool.cache.saved 2> /dev/null
}

name="ix-zfs"
start_cmd='import_zpools'
stop_cmd=':'

load_rc_config $name
run_rc_command "$1"
