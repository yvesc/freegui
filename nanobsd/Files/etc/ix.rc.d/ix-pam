#!/bin/sh
#
# $FreeBSD$
#

# PROVIDE: ix-pam
# REQUIRE: root
# REQUIRE: ix-nsswitch
# BEFORE: NETWORK

. /etc/rc.subr

: ${PAM_TEMPLATE_DIR:="/etc/ix/templates/pam.d"}
: ${PAM_DIR:="/etc/pam.d"}

pam_file()
{
	local service="${1}"
	local template="${PAM_TEMPLATE_DIR}/${service}"
	local temp="/tmp/.tmp.${service}"
	local file="${PAM_DIR}/${service}"

	awk '{
		if (/^#.*@@.*@@/) {
		} else {
			print $0;
		}
	}' < "${template}" > "${temp}"

	if [ -f "${temp}" ]
	then
		mv "${temp}" "${file}" >/dev/null 2>&1
		if [ "$?" != "0" ]
		then
			rm -f "${temp}"
			return 1
		fi
	fi

	return 0
}

pam_nt4_file()
{
	local service="${1}"
	local template="${PAM_TEMPLATE_DIR}/${service}"
	local temp="/tmp/.tmp.${service}"
	local file="${PAM_DIR}/${service}"

	awk '{
		if (/^#.*@@WINBIND@@/) {
			gsub("^#.*@@WINBIND@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@MKHOMEDIR@@/) {
			gsub("^#.*@@MKHOMEDIR@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@.*@@/) {
		} else {
			print $0;
		}
	}' < "${template}" > "${temp}"

	if [ -f "${temp}" ]
	then
		mv "${temp}" "${file}" >/dev/null 2>&1
		if [ "$?" != "0" ]
		then
			rm -f "${temp}"
			return 1
		fi
	fi

	return 0
}

pam_activedirectory_file()
{
	local service="${1}"
	local winbind="${2}"
	local ldap="${3}"
	local krb5="${4}"
	local template="${PAM_TEMPLATE_DIR}/${service}"
	local temp="/tmp/.tmp.${service}"
	local file="${PAM_DIR}/${service}"

	awk -v winbind="${winbind}" -v krb5="${krb5}" -v ldap="${ldap}" '{
		if (/^#.*@@LDAP@@/ && ldap) {
			gsub("^#.*@@LDAP@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@WINBIND@@/ && winbind) {
			gsub("^#.*@@WINBIND@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@KRB5@@/ && krb5) {
			gsub("^#.*@@KRB5@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@MKHOMEDIR@@/ && (ldap || winbind || krb5)) {
			gsub("^#.*@@MKHOMEDIR@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@.*@@/) {
		} else {
			print $0;
		}
	}' < "${template}" > "${temp}"

	if [ -f "${temp}" ]
	then
		mv "${temp}" "${file}" >/dev/null 2>&1
		if [ "$?" != "0" ]
		then
			rm -f "${temp}"
			return 1
		fi
	fi

	return 0
}

pam_nis_file()
{
	local service="${1}"
	local template="${PAM_TEMPLATE_DIR}/${service}"
	local temp="/tmp/.tmp.${service}"
	local file="${PAM_DIR}/${service}"
}

pam_ldap_file()
{
	local service="${1}"
	local template="${PAM_TEMPLATE_DIR}/${service}"
	local temp="/tmp/.tmp.${service}"
	local file="${PAM_DIR}/${service}"

	awk '{
		if (/^#.*@@LDAP@@/) {
			gsub("^#.*@@LDAP@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@MKHOMEDIR@@/) {
			gsub("^#.*@@MKHOMEDIR@@[^a-zA-Z0-9]+", "");
			print $0;
		} else if (/^#.*@@.*@@/) {
		} else {
			print $0;
		}
	}' < "${template}" > "${temp}"

	if [ -f "${temp}" ]
	then
		mv "${temp}" "${file}" >/dev/null 2>&1
		if [ "$?" != "0" ]
		then
			rm -f "${temp}"
			return 1
		fi
	fi

	return 0
}

generate_pam_files()
{
	local ad="${1}"
	local nt4="${2}"
	local ldap="${3}"
	local nis="${4}"

	if [ ! -d "${PAM_TEMPLATE_DIR}" -o ! -d "${PAM_DIR}" ]
	then
		return 1
	fi

	for service in $(ls "${PAM_TEMPLATE_DIR}")
	do
		local template="${PAM_TEMPLATE_DIR}/${service}"
		if [ ! -f "${template}" ]
		then
			continue
		fi

		if [ "${nt4}" = "1" ]
		then
			pam_nt4_file "${service}"

		elif [ -n "${ad}" -a "${ad}" != "0" ]
		then
			local winbind=1

			if [ "${ad}" = "2" ]
			then
				winbind=0
				ldap=1
			fi

			pam_activedirectory_file "${service}" "${winbind}" "${ldap}"

		elif [ "${nis}" = "1" ]
		then
			pam_file "${service}"

		elif [ "${ldap}" = "1" ]
		then
			pam_ldap_file "${service}"

		else
			pam_file "${service}"
		fi
	done

	return 0
}

pam_start()
{
	local ad=0
	local nt4=0
	local ldap=0
	local nis=0

	if dirsrv_enabled activedirectory
	then
		ad=1
               	ad_unix=$(${FREENAS_SQLITE_CMD} ${FREENAS_CONFIG} "
		SELECT
			ad_unix_extensions
		FROM
			services_activedirectory
		ORDER BY
			-id
		LIMIT 1
		")
		if [ "${ad_unix}" = "1" ]
		then
			ad=2
		fi

	elif dirsrv_enabled domaincontroller
	then
		ad=1


	elif dirsrv_enabled nt4
	then
		nt4=1

	elif dirsrv_enabled ldap
	then
		ldap=1

	elif dirsrv_enabled nis
	then
		nis=1
	fi

	generate_pam_files "${ad}" "${nt4}" "${ldap}" "${nis}"
}

pam_stop()
{
	generate_pam_files
}

name="ix-pam"
start_cmd='pam_start'
stop_cmd='pam_stop'
        
load_rc_config $name
run_rc_command "$1"
