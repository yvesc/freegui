#!/bin/sh

#
# Script to capture debug for system crash reporting.
# This script will make a temp directory and copy diagnostic information
# to it.
# When invoked with -b, it will assume you want to ONLY send textdumps
# that are in 'dumpdir' set by /etc/rc.conf.
#

mydir=`dirname $0`

# get the textdump file. On some systems this is a gzipped 
# tarball, so we we check for that here.
get_textdump ()
{
	local textdump

	if [ -e $dumpdir/textdump.tar.last ] ; then
		textdump="$dumpdir/textdump.tar.last"
	elif [ -e $dumpdir/textdump.tar.last.gz ] ; then
		textdump="$dumpdir/textdump.tar.last.gz"
	fi

	echo $textdump
}

# there is a dumpfile in /var/crash
# sets "$actualdump" -> to $dumpdir/textdump.tar.N
dumpfile_to_submit_exists ()
{
	local dumpdir=$1
	local textdump=$(get_textdump)

	# no crashdump at all
	if [ -z "$textdump" -o ! -e "$textdump" ] ; then
		return 1
	fi

	actualdump=$(realpath $textdump)
	if [ $? -gt 0 ] ; then
		echo "can not realpath $textdump" >&2
		return 2
	fi

	# dump already submitted
	if [ -e "$actualdump.submitted" ] ; then
		return 1
	fi
	return 0
}

truncate_files ()
{
	local limit=$1
	local IFS=$'\n'

	for file in $(find $dir -type f -a \
		! -name '*.tar' -a \
		! -name '*.tar.gz' -a \
		! -name '*.tgz' -a \
		! -name '*.gz' -a \
		! -name '*.zip' -a \
		! -name '*.zip' -a \
		! -name '*.gzip' -a \
		! -name '*.bzip' -a \
		! -name '*.bzip2' -a \
		! -name '*.bz2' -a \
		! -name '*.compressed' -print) ; do
		tmpfile="$(mktemp /tmp/XXXXXX)"
		tail -n $limit "$file" > "$tmpfile" 2>/dev/null
		if [ $? = 0 ] ; then
			mv "$tmpfile" "$file"
		else
			rm "$tmpfile"
		fi
	done
}

test -e /etc/rc.conf && . /etc/rc.conf
[ "$dumpdir" = "" ] && dumpdir="$dumpdir"

boot_time=false
force_upload=false
has_ticket_info=false
dont_delete=false
limit=10000
textdump=$(get_textdump)

while getopts "bFt:d:sl:" opt ; do
	case "${opt}" in
	b)
		boot_time=true
		;;
	F)	force_upload=true
		;;
	t)	has_ticket_info=true
		ticket_info=$OPTARG
		;;
	d)	topdir=$OPTARG
		;;
	s)	dont_delete=true
		;;
	l)	limit=$OPTARG
		;;
	\?)	exit 2
		;;
	esac
done

if [ -t 1 ] && ! $boot_time && ! $force_upload ; then
	cat <<END_TEXT
Welcome to ixdiagnose.

ixdiagnose sends iXsystems the debugging information of your
computer.  In this mode we will send your logs and the
contents of your diagnostics to iXsystems.

Press 'Enter' to continue or ^C (control+C) to abort.
END_TEXT
	read dummy
fi

# If this file doesn't exist then we are booting
# the first time and we should execute as if sending
# textdump but instead send the hardware config.
if [ ! -e '/data/.hwconfig_sent' ] ; then
	sendhw=true
else
	sendhw=false
fi

# We only send the data at boot time if the user
# opts in.  The installer and/or gui should 
# ask the user and then touch/rm this file to
# let ixdiagnose know to send the hardware config
# at next boot.
if [ ! -e '/data/config/.sendhw' ] ; then
	sendhw=false
fi


# during boot ix-diagnose will call us with --boot
# if there is no crashdump, AND we've already sent
# the hardware profile then just exit.
if ! $sendhw && $boot_time ; then
	if ! dumpfile_to_submit_exists $dumpdir ; then
		exit 0
	fi
fi

# Make our staging directory.
# We will then make a directory called ixdiagnose under it
# so that the tarball extracts nicely.
set -x
if [ -z "${topdir}" ] ; then
	topdir=`mktemp -d -t ixdiagnose`
else
	mkdir -p "${topdir}"
fi
if [ $? -gt 0 ] ; then
	echo "can't make temp directory"
	exit 1
fi

# Remove the temp directory on exit if dont_delete is false
if ! $dont_delete ; then
	trap "rm -rf $topdir" EXIT
fi

dir=$topdir/ixdiagnose

set -e
mkdir -p $dir
if [ $? -gt 0 ] ; then
	echo "can't make ixdiagnose directory"
	exit 1
fi

#
# We can send some more detailed information here if
# the user has opted in by running it from the command
# line.
#
# We ONLY send this more detailed information if the
# user specifically requests that we do.
#
if ! $boot_time ; then
	$mydir/freenas-debug -A >/dev/null
	tar -cHf - -C /var log | tar -C $dir -xf -
	tar -cHf - -C /var/tmp fndebug | tar -C $dir -xf -
	if [ "${limit}" != "-1" ] ; then
		truncate_files "${limit}"
	fi
fi

if ! dumpfile_to_submit_exists $dumpdir ; then
	if [ $? = 2 ] ; then
		exit 2
	fi
else
	mkdir "$dir/textdump"
	tar -xvf $textdump -C "$dir/textdump"
	cp $dumpdir/info.last "$dir/textdump"
fi

if $has_ticket_info ; then
	TICKET_ARG="-t $ticket_info"
	cp $ticket_info "$dir/ticket_info.json"
fi

set +e
/usr/local/sbin/dmidecode > "$dir/dmidecode"
sysctl hw > "$dir/sysctl_hw"
/usr/local/bin/cpuid > "$dir/cpuid"
set -e

if [ -f /etc/hostid ] ; then
	cp /etc/hostid "$dir/hostid"
fi

if [ -f /etc/version ] ; then
	cp /etc/version "$dir/version"
fi

if [ -f /usr/local/etc/registration ] ; then
	cp /usr/local/etc/registration "$dir/registration.json"
fi

ls /dev/ses* 2> /dev/null | while read -r ses; do
	name=$(echo ${ses}|cut -d "/" -f 3)
	/sbin/camcontrol smpphylist ${ses} > "$dir/smpphylist.${name}"
	/usr/local/sbin/smp_rep_phy_err_log ${ses} > "$dir/smp_rep_phy_err_log.${name}"
	cat $dir/smpphylist.${name} | tail -n +3 | while read -r num val desc; do
		if [ -n "${desc}" ]; then
			/usr/local/sbin/smp_rep_phy_err_log ${ses} -p ${num} > "$dir/smp_rep_phy_err_log.${name}.${num}"
		fi
	done
done

tar -C $dir/.. -cHzf $dir/../ixdiagnose.tgz ixdiagnose
$mydir/crashuploader $topdir/ixdiagnose.tgz
if [ "$actualdump" != "" ] ; then
	touch $actualdump.submitted
fi
if $sendhw ; then
    touch "/data/.hwconfig_sent"
fi
